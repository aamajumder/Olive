{
    "input_model":{
        "type": "CompositePyTorchModel",
        "config": {
            "model_components": [
                {
                    "name": "decoder_model",
                    "type": "PyTorchModel",
                    "config": {
                        "model_script": "user_script.py",
                        "io_config": {
                            "input_names": [
                                "tokens"
                            ],
                            "output_names": [
                                "logits"
                            ],
                            "dynamic_axes": {
                                "tokens": { "0": "batch_size", "1": "seq_len" },
                                "position_ids": { "0": "batch_size", "1": "seq_len" },
                                "attention_mask": { "0": "batch_size", "1": "sequence_length" }
                            }
                        },
                        "model_loader": "load_decoder_model",
                        "dummy_inputs_func": "decoder_inputs"
                    }
                },
                {
                    "name": "decoder_with_past_model",
                    "type": "PyTorchModel",
                    "config": {
                        "model_script": "user_script.py",
                        "io_config": {
                            "input_names": [
                                "tokens_increment"
                            ],
                            "output_names": [
                                "logits"
                            ],
                            "dynamic_axes": {
                                "tokens_increment": { "0": "batch_size", "1": "seq_len_increment" },
                                "position_ids_increment": { "0": "batch_size", "1": "seq_len_increment" },
                                "attention_mask": { "0": "batch_size", "1": "sequence_length" }
                            }
                        },
                        "model_loader": "load_decoder_with_past_model",
                        "dummy_inputs_func": "decoder_with_past_inputs"
                    }
                }
            ]
        }
    },
    "systems": {
        "local_system": {
            "type": "LocalSystem",
            "config": {
                "accelerators": ["gpu"]
            }
        }
    },
    "evaluators": {
        "common_evaluator": {
            "metrics": [
                {
                    "name": "latency",
                    "type": "latency",
                    "sub_types": [{"name": "avg"}],
                    "user_config": {
                        "user_script": "user_script.py",
                        "dataloader_func": "merged_decoders_data_loader",
                        "batch_size": 1
                    }
                }
            ]
        }
    },
    "passes": {
        "convert": {
            "type": "OnnxConversion",
            "config": {
                "target_opset": 17
            }
        },
        "optimize": {
            "type": "OrtTransformersOptimization",
            "disable_search": true,
            "config": {
                "model_type": "gpt2",
                "opt_level": 0,
                "num_heads": 32,
                "hidden_size": 4096,
                "float16": true,
                "use_gpu": true,
                "keep_io_types": false,
                "use_gqa": true,
                "num_key_value_heads": 32,
                "replace_attn_mask_input_with_seq_len": true,
                "optimization_options": {
                    "enable_gelu": false,
                    "enable_layer_norm": true,
                    "enable_attention": true,
                    "use_multi_head_attention": true,
                    "enable_skip_layer_norm": false,
                    "enable_embed_layer_norm": false,
                    "enable_bias_skip_layer_norm": false,
                    "enable_bias_gelu": false,
                    "enable_gelu_approximation": false,
                    "enable_qordered_matmul": false,
                    "enable_shape_inference": true,
                    "enable_gemm_fast_gelu": false,
                    "enable_nhwc_conv": false,
                    "enable_group_norm": false,
                    "enable_bias_splitgelu": false,
                    "enable_packed_qkv": true,
                    "enable_packed_kv": true,
                    "enable_bias_add": false,
                    "enable_rotary_embeddings": true
                }
            }
        },
        "merge": {
            "type": "OptimumMerging"
        }
    },
    "engine": {
        "search_strategy": {
            "execution_order": "joint",
            "search_algorithm": "exhaustive"
        },
        "evaluator": "common_evaluator",
        "evaluate_input_model": false,
        "host": "local_system",
        "target": "local_system",
        "cache_dir": "cache",
        "output_name": "",
        "output_dir": "footprints",
        "execution_providers": ["DmlExecutionProvider"]
    }
}
